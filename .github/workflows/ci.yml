name: deploy

on:
  push:
    branches:
      - main
      - ci/**

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: setup node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: install pacakges
        run: yarn

      - name: build
        run: yarn build

      - name: upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: static
          path: build/
  deploy-dev:
    environment: Dev
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: download artifact
        uses: actions/download-artifact@v2
        with:
          name: static
          path: build
      - name: deploy to ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: 'build/'
          target: ${{ secrets.TARGET }}
          strip_components: 1
  deploy-stage:
    environment: Stage
    needs: build
    runs-on: ubuntu-latest
    if: contains(github.ref, "release") || contains(github.ref, "ci")
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: download artifact
        uses: actions/download-artifact@v2
        with:
          name: static
          path: build
      - name: deploy to s3
        uses: reggionick/s3-deploy@v3
        with:
          folder: build
          bucket: ${{ secrets.S3_BUCKET }}
          bucket-region: ${{ secrets.S3_BUCKET_REGION }}
          dist-id: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
          invalidation: /
          no-cache: true
          private: true
        
