/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CoFiXController,
  CoFiXControllerInterface,
} from "../CoFiXController";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "nestPriceFacade",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sigmaSQ",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "p0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bn0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "p",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bn",
        type: "uint256",
      },
    ],
    name: "_calcRevisedSigmaSQ",
    outputs: [
      {
        internalType: "uint256",
        name: "revisedSigmaSQ",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sigmaSQ",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bn",
        type: "uint256",
      },
    ],
    name: "calcK",
    outputs: [
      {
        internalType: "uint256",
        name: "k",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sigmaSQ",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "p0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bn0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "p",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bn",
        type: "uint256",
      },
    ],
    name: "calcRevisedK",
    outputs: [
      {
        internalType: "uint256",
        name: "k",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "payback",
        type: "address",
      },
    ],
    name: "latestPriceInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceEthAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "avgPriceEthAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "avgPriceTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sigmaSQ",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "payback",
        type: "address",
      },
    ],
    name: "queryOracle",
    outputs: [
      {
        internalType: "uint256",
        name: "k",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "payback",
        type: "address",
      },
    ],
    name: "queryPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610c03380380610c0383398101604081905261002f91610044565b60601b6001600160601b031916608052610074565b60006020828403121561005657600080fd5b81516001600160a01b038116811461006d57600080fd5b9392505050565b60805160601c610b636100a0600039600081816102010152818161039501526104880152610b636000f3fe6080604052600436106100655760003560e01c80637c0bcdae116100435780637c0bcdae14610110578063a2488f071461013e578063ef8305231461015e57600080fd5b80631486ea471461006a5780631a78f96d1461009d5780633c72db4c146100d0575b600080fd5b34801561007657600080fd5b5061008a610085366004610974565b61017e565b6040519081526020015b60405180910390f35b6100b06100ab3660046107f3565b6101a0565b604080519485526020850193909352918301526060820152608001610094565b6100e36100de3660046107f3565b61033b565b604080519687526020870195909552938501929092526060840152608083015260a082015260c001610094565b61012361011e3660046107f3565b610434565b60408051938452602084019290925290820152606001610094565b34801561014a57600080fd5b5061008a610159366004610974565b61051d565b34801561016a57600080fd5b5061008a61017936600461092e565b610684565b6000610196610190878787878761051d565b83610684565b9695505050505050565b6040517f2078404800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152600260248301528281166044830152600091829182918291829182917f0000000000000000000000000000000000000000000000000000000000000000169063207840489034906064016000604051808303818588803b15801561024657600080fd5b505af115801561025a573d6000803e3d6000fd5b50505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526102a19190810190610826565b94505050509150670de0b6b3a76400009450816001815181106102c6576102c6610acf565b60200260200101519350816000815181106102e3576102e3610acf565b6020026020010151925061032e818360038151811061030457610304610acf565b60200260200101518460028151811061031f5761031f610acf565b6020026020010151878761017e565b9550505092959194509250565b6040517ffe0103e200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301528281166024830152600091829182918291829182917f0000000000000000000000000000000000000000000000000000000000000000169063fe0103e290349060440160c0604051808303818588803b1580156103da57600080fd5b505af11580156103ee573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061041391906109af565b949d670de0b6b3a76400009d50939b508c9a50985092965090945050505050565b6040517f7c2d656b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301528281166024830152600091829182917f000000000000000000000000000000000000000000000000000000000000000090911690637c2d656b90349060440160408051808303818588803b1580156104ce57600080fd5b505af11580156104e2573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906105079190610950565b670de0b6b3a76400009790965090945092505050565b6000808561053385670de0b6b3a7640000610a4c565b61053d9190610a11565b9050670de0b6b3a764000081111561056857610561670de0b6b3a764000082610a89565b905061057d565b61057a81670de0b6b3a7640000610a89565b90505b670de0b6b3a76400006105908280610a4c565b61059a9190610a11565b90506000600e6105aa8786610a89565b6105b49190610a4c565b90506000806105c38385610a11565b9050806105d18b600a610a4c565b11156105fc576009816105e58c600a610a4c565b6105ef9190610a89565b6105f99190610a11565b91505b6000828461060a8180610a4c565b6106149190610a4c565b61061e9190610a4c565b9050600281901b8511610633578a9550610676565b61063e816009610a4c565b851161065957600161065083856109f9565b901c9550610676565b6005610669600284901b856109f9565b6106739190610a11565b95505b505050505095945050505050565b60008061069b61069661271086610a11565b61076f565b6106aa9064174876e800610a4c565b9050670de0b6b3a76400006601c6bf526340008211156106d35750671bc16d674ec800006106ed565b660110d9316ec0008211156106ed57506714d1120d7b1600005b6ec097ce7bc90715b34b9f10000000008161071084678ac7230489e80000610a4c565b600e61071c8843610a89565b61072c906509184e72a000610a4c565b6107369190610a4c565b61074890670de0b6b3a7640000610a4c565b61075291906109f9565b61075c9190610a4c565b6107669190610a11565b95945050505050565b600060038211156107c0575080600061078c600183811c906109f9565b90505b818110156107ba579050806001816107a78186610a11565b6107b191906109f9565b901c905061078f565b50919050565b81156107ca575060015b919050565b803573ffffffffffffffffffffffffffffffffffffffff811681146107ca57600080fd5b6000806040838503121561080657600080fd5b61080f836107cf565b915061081d602084016107cf565b90509250929050565b600080600080600060a0868803121561083e57600080fd5b855167ffffffffffffffff8082111561085657600080fd5b818801915088601f83011261086a57600080fd5b815160208282111561087e5761087e610afe565b8160051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f830116810181811086821117156108c1576108c1610afe565b604052838152828101945085830182870184018e10156108e057600080fd5b600096505b848710156109035780518652600196909601959483019483016108e5565b50918b015160408c015160608d01516080909d0151939e919d509b9a50919850909650505050505050565b6000806040838503121561094157600080fd5b50508035926020909101359150565b6000806040838503121561096357600080fd5b505080516020909101519092909150565b600080600080600060a0868803121561098c57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b60008060008060008060c087890312156109c857600080fd5b865195506020870151945060408701519350606087015192506080870151915060a087015190509295509295509295565b60008219821115610a0c57610a0c610aa0565b500190565b600082610a47577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a8457610a84610aa0565b500290565b600082821015610a9b57610a9b610aa0565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220bbcb78613fbb5f7de9c9d54842f32bcafc09b89f081bbc944f157f937d0f75ea64736f6c63430008060033";

export class CoFiXController__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    nestPriceFacade: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CoFiXController> {
    return super.deploy(
      nestPriceFacade,
      overrides || {}
    ) as Promise<CoFiXController>;
  }
  getDeployTransaction(
    nestPriceFacade: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(nestPriceFacade, overrides || {});
  }
  attach(address: string): CoFiXController {
    return super.attach(address) as CoFiXController;
  }
  connect(signer: Signer): CoFiXController__factory {
    return super.connect(signer) as CoFiXController__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CoFiXControllerInterface {
    return new utils.Interface(_abi) as CoFiXControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CoFiXController {
    return new Contract(address, _abi, signerOrProvider) as CoFiXController;
  }
}
